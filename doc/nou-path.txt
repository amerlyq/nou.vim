%%%%% Paths %%%%%  # *nou-all-path*
# vim:ft=nou

%% Not path

  /         # single slash
  //        # double slash
  /////     # slash delim
  js://www  # link
  cc:\\rnd  # random
  ///root/  # repeated prf
  /home///  # repeated sfx
  /\        # sfx \s
  \ /       # prf \s
  s :123    # num
  s :12:33  # num:col
  s x/y/z   # variants (inlined)
  x / y     # variants (2)
  x / y /   # variants (3)

% Regex
  /./
  /r\ \/x/  # regex
  /s \d\//  # escaping
  /s \///   # not regex

*************************

%% Root

  /root
  /ro\ t
  /root/path
  /home/user/
  c:\\Program\ Files\\Prg
  c:\\Program\ Files\\      # BUG: trailing space instead of delimiter
  D:\some\path

%% Marked '//'
# Relative path direct parsing is inefficient
# Works on any path (marker concealed)

  ALT: // ⁖/ $/ $$/ #/ ##/

# Context-dependent location (e.g. function calltree for linux kernel)
#   * with location specified inside same file somewhere above it
#     = search from curpos() to top for assignment ⋮//=/path/to/dir⋮
#   * or using user-specified variable :let b:nou.loci="/path/to/dir" DFL=getcwd(initial)

  //s/d/
  //some/dir
  //some/dir/
  //some/file.ext
  //some/file_name

%% Prefixed

  ~/
  ~/dir
  ~/in/home
  ./file            # path relative to cwd ($PWD)
  ../relat/path     # same as above == ./../relat/path

  @/airy/README.md  # repo (view) inside myrepos :: ~/aura OR /annex
  :/doc/nou.txt     # subpath (feature) inside current repo
  %/../Makefile     # filepath relatively to current file (./nou-path.txt)
  …/errno.h         # search in all ':h path' (.,/usr/include) like usual 'gf' do
  &/ranger/doc/     # open reference file inside ./&/ directory in cwd or parents hierarchy
                    #   = add "&/" to pj .gitignore and keep all temporary third-party materials there

%% Patterns

  //<pkg>/*.mk
  //$pkg/<src>
  /ho<me>/$user
  //some/dir$v/f

%% Line numbers

  //file:117
  //path/lnum:32
  /lnum/lcol:32:44
  ~/d/n:13:5end     # inlined

%% With spaces

  /root/spa\ \ ce
  ./relat/space\    # sfx \s
  //\ some/space/     # prf \s
  ./spa\ ce:89

%% In lists

  ~/, //r/p, ./h, /v/p
  /r/p,./h/p,//v/p
  ~/,/end/comma,
  /root /home /var
  ./relat/path /s/some

%% Brackets
  (./dir  ./#)  (~/.)
  [/r/dir ~/_]  [/r/d]
  {//s/dir //dir} {//s}
  <//file:117>      # BAD: ending conflicts with /home/<path>
