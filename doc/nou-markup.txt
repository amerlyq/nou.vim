%%%%% Mark-up %%%%%  # *nou-markup*
# vim:ft=nou

%%% Text & Comments %%%  # *nou-text*

# Separated comment (rest of line)
Inlined comments must have 2 spaces before/after '#'
Main body  # inline comment #  text

#% Developer's documentation comment (for e.g. self-parsing scripts)
some option description #% with developer's annotation


%%% Accents %%%  # *nou-accents*
Wrap text in same symbols to apply effect.
There must be no spaces between symbol and text
# Color isn't inherited from outline.

  `` | `normal text`
  '' | 'italic text'
  ** | *bold text*
  __ | _underline text_
  || | |standout text|


%%% Headers %%%  # *nou-headers*
Can be left-prepended or surrounding

%%%%% L0 %%%%%
%%%%  L1  %%%%
...
%%%%% L0
%%%% L1
%%% L2
%% L3
% L4


%%% Outline %%%  # *nou-outline*
Need at least one outline.
  L1
    L2
      L3  # comment
        L4
          L5
            L6
    L2  # interleaving nesting
              L7  # color depends only on indent
                L8
                  L9
                    L10  # cyclic colorizing (optional)


%%% Separators %%%  # *nou-separators*
# Need >= 5 symbols

%% Center
--------------------
~~~~~~~~~~~~~~~~~~~~
++++++++++++++++++++
====================
********************
<<<<<<<<<<<<<<<<<<<<
>>>>>>>>>>>>>>>>>>>>

%% Top
""""""""""""""""""""
^^^^^^^^^^^^^^^^^^^^

%% Bottom
....................
____________________

%% Fill
::::::::::::::::::::
!!!!!!!!!!!!!!!!!!!!
????????????????????
####################
XXXXXXXXXXXXXXXXXXXX
@@@@@@@@@@@@@@@@@@@@


%%% Decisions %%%  # *nou-decision*
Works starting from any indent (even zero)

* statement  | neutral
+ proc       | positive argument
- con        | negative argument
= result     | consequence or P.S. (i.a. "==" == P.P.S. …)
: info       | topic clarification
~ ambiguity  | dissatisfaction
? doubt      | think over
! requirement| constraint / attention
< reason     | prerequisite
> conclusion | decision

Use . to emphasize the whole line
  !. require, attention
  =. result, consequence
  <. reason
  ?. doubt, think over

%% Surround
Some decisions are more pretty when they surround text
  ? text ?
  ! text !
  :: text ::
  <= text <=

%% Arrows
Combined arrows
  < a
  <- a
  => b
  <~ a
  <-= a
  ~=> b

%% Priority
Each decision can have priority.
# Either symbolic or numerical.

!!9 -9  # highest
...
!!4 -4
!!! -3
!!  -2
!   -1
!0   0
!1   1
!2   2
...
!99 99  # lowest


%% Tasks

  [_] todo                    |     <LL><Space>
  [X] done                    |     <LL> X
  [$] cancel                  | ---
  [99%] progress              |  99 <LL> X
  2020-01-17 date             |     <LL> d
  2020-01-17 [_] created      |     <LL> D
  2020-01-17 [$] cancel       |     <LL> $
  1994-02-01 [05%] progress   | 105 <LL> x
  2020-01-17 [12%] progress   |  12 <LL> x
  2020-01-17 [20%] progress   |   2 <LL> x
  2020-01-17 [33%] progress   |
  2020-01-17 [45%] progress   |
  2020-01-17 [50%] progress   |
  2020-01-17 [65%] progress   |
  2020-01-17 [75%] progress   |
  2020-01-17 [85%] progress   |
  2020-01-17 [90%] progress   |     <LL> 9
  2020-01-17 [X] done         |     <LL> x
  [⡞⣶⡓⡙] done (braille ts)    |     <LL> b
  [0/12] progress ratio       |
  [1/12] progress ratio       |
  [8/12] progress ratio       |
  [12/12] progress ratio      |


%%% Embedded syntax %%%  # *nou-embedded*

% bash
Allowed any indent before '$'

  Inlined $ for a in *; do echo $a; done $ into text/outline
  Separate line
    $ cat ./file | sort -u | awk -r '{print$0}'

%% plain

  (vim) :let a=5
  (gdb) disassemble


%%% Artifacts %%%  # *nou-artifacts*
Standing out text objects

%% Link %%
  http://example.com   # Anything with "...://"
  ftp://example.com
  www.example.com

%% Path %%
Automatic
  c:\\Program\ Files\\Prg
  ~/Downloads
  /tmp/fi\ le
  ./file
  ../relat/path
  /lnum/lcol:32:44

Manual by '//' prefix
  //some/dir
  //$pkg/<src>/*.<ext>
  //path/lnum:32
  ~/, //r/p, ./h, /v/p

%% Regex %%
  /regex/
  /\ re\/[gex ]?/
  /[[:alpha:]]:\\{1,2}\ze%([^\\]*|$/

%% Index
  #1
  aaa #2 bbb (3) ccc
  ddd#4 eee (5)fff BUT hhh(6)
  #7tag #8


Line continuations
  line \
    continue
  !. line,
    continue
  -. line --
    continue
